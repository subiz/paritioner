syntax = "proto3";

package partitioner;

message Configuration {
	string version = 1;
	int32 term = 2;
	string cluster = 3; // ID of the cluster

	int32 total_partitions = 6;
	int32 next_term = 7;
	map<string, WorkerPartitions> partitions = 9;
	map<string, string> hosts = 10;
}

message WorkerPartitions {
	repeated int32 partitions = 7;
}

message Empty {}

message Cluster {
	string id = 1;
}

message WorkerHost {
	string cluster = 1;
	string id = 2;
	int32 term = 3;
	string host = 4;
}

service Coordinator {
	rpc GetConfig(Cluster) returns (Configuration) {}
	rpc Rebalance(WorkerHost) returns (stream Configuration) {}
	rpc Accept(WorkerHost) returns (Empty) {}
	rpc Deny(WorkerHost) returns (Empty) {}
}

service Worker {
	rpc GetConfig(Cluster) returns (Configuration) {}
}

service Hello {
	rpc Hello(Cluster) returns (WorkerHost) {}
}

service Goodbye {
	rpc Goodbye(Cluster) returns (WorkerHost) {}
}